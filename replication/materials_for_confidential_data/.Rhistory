library(stargazer)
library(kableExtra)
library(pander)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
urls <- "https://www.weltfussball.de/spielplan/bundesliga-2016-2017-spieltag/1/"
#page <- read_html(urls) %>%
#  html_node(".standard_tabelle") %>%
#  html_text()
#  df <- as.data.frame(page)
#    final_df <- rbind(final_df, df)
i <- 0
j <- 0
def <- ""
final_df <- ""
for (i in 1:6) {
for (j in 1:34) {
def <- c(urls, def)
urls <- paste0("https://www.weltfussball.de/spielplan/bundesliga-20", i+15, "-20", i+16, "-spieltag/", j, "/")
page <- read_html(urls) %>%
html_node(".standard_tabelle") %>%
html_text()
page <- str_replace_all(page, "\n", " ")
df <- as.data.frame(page)
final_df <- rbind(final_df, df)
}
}
se <- final_df
uhrzeiten <- c("00:00", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00", "03:30", "04:00", "04:30", "05:00", "05:30", "06:00", "06:30", "07:00", "07:30", "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30")
final_df <- final_df %>%
mutate(page = str_replace_all(page, "Bayern München", "FCB"),
page = str_replace_all(page, "VfL Wolfsburg", "WOB"),
page = str_replace_all(page, "RB Leipzig", "RBL"),
page = str_replace_all(page, "Borussia Dortmund", "BVB"),
page = str_replace_all(page, "Bayer Leverkusen", "B04"),
page = str_replace_all(page, "1. FSV Mainz 05", "M05"),
page = str_replace_all(page, "1. FC Köln", "KOE"),
page = str_replace_all(page, "Eintracht Frankfurt", "SGE"),
page = str_replace_all(page, "Hertha BSC", "BSC"),
page = str_replace_all(page, "VfL Bochum", "BOC"),
page = str_replace_all(page, "Bor. Mönchengladbach", "BMG"),
page = str_replace_all(page, "FC Augsburg", "FCA"),
page = str_replace_all(page, "SC Freiburg", "SCF"),
page = str_replace_all(page, "Arminia Bielefeld", "DSC"),
page = str_replace_all(page, "1899 Hoffenheim", "TSG"),
page = str_replace_all(page, "SpVgg Greuther Fürth", "SGF"),
page = str_replace_all(page, "1. FC Union Berlin", "FCU"),
page = str_replace_all(page, "Werder Bremen", "SVW"),
page = str_replace_all(page, "FC Schalke 04", "S04"),
page = str_replace_all(page, "Hamburger SV", "HSV"),
page = str_replace_all(page, "SV Darmstadt 98", "D98"),
page = str_replace_all(page, "FC Ingolstadt 04", "FCI"),
page = str_replace_all(page, "1. FC Nürnberg", "FCN"),
page = str_replace_all(page, "VfB Stuttgart", "VFB"),
page = str_replace_all(page, "Hannover 96", "H96"),
page = str_replace_all(page, "Fortuna Düsseldorf", "F95"),
page = str_replace_all(page, "SC Paderborn", "SCP"))
final_dfString2 <- c(final_df$page)
final_df <- final_df[rep(2:nrow(final_df), 1),]
final_df <- data.frame(String = final_df)
String2 <- rep(seq(1, 34), times = nrow(final_df)/34)
final_df = final_df %>%
separate(col = String, into = c("Day1", "Day2", "Day3", "Day4"), sep = "[0-9][0-9][[:punct:]][0-9][0-9][[:punct:]][0-9][0-9][0-9][0-9]", remove = FALSE) %>%
mutate(Spieltag = String2)
urls <- "https://www.weltfussball.de/spielplan/bundesliga-2016-2017-spieltag/1/"
#page <- read_html(urls) %>%
#  html_node(".standard_tabelle") %>%
#  html_text()
#  df <- as.data.frame(page)
#    final_df <- rbind(final_df, df)
i <- 0
j <- 0
def <- ""
final_df <- ""
for (i in 1:6) {
for (j in 1:34) {
def <- c(urls, def)
urls <- paste0("https://www.weltfussball.de/spielplan/bundesliga-20", i+15, "-20", i+16, "-spieltag/", j, "/")
page <- read_html(urls) %>%
html_node(".standard_tabelle") %>%
html_text()
page <- str_replace_all(page, "\n", " ")
df <- as.data.frame(page)
final_df <- rbind(final_df, df)
}
}
library(tidyverse)
library(rvest)
library(stringr)
library(httr)
library(lubridate)
library(stargazer)
library(kableExtra)
library(pander)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
urls <- "https://www.weltfussball.de/spielplan/bundesliga-2016-2017-spieltag/1/"
#page <- read_html(urls) %>%
#  html_node(".standard_tabelle") %>%
#  html_text()
#  df <- as.data.frame(page)
#    final_df <- rbind(final_df, df)
i <- 0
j <- 0
def <- ""
final_df <- ""
for (i in 1:6) {
for (j in 1:34) {
def <- c(urls, def)
urls <- paste0("https://www.weltfussball.de/spielplan/bundesliga-20", i+15, "-20", i+16, "-spieltag/", j, "/")
page <- read_html(urls) %>%
html_node(".standard_tabelle") %>%
html_text()
page <- str_replace_all(page, "\n", " ")
df <- as.data.frame(page)
final_df <- rbind(final_df, df)
}
}
View(final_df)
uhrzeiten <- c("00:00", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00", "03:30", "04:00", "04:30", "05:00", "05:30", "06:00", "06:30", "07:00", "07:30", "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30")
final_df <- final_df %>%
mutate(page = str_replace_all(page, "Bayern München", "FCB"),
page = str_replace_all(page, "VfL Wolfsburg", "WOB"),
page = str_replace_all(page, "RB Leipzig", "RBL"),
page = str_replace_all(page, "Borussia Dortmund", "BVB"),
page = str_replace_all(page, "Bayer Leverkusen", "B04"),
page = str_replace_all(page, "1. FSV Mainz 05", "M05"),
page = str_replace_all(page, "1. FC Köln", "KOE"),
page = str_replace_all(page, "Eintracht Frankfurt", "SGE"),
page = str_replace_all(page, "Hertha BSC", "BSC"),
page = str_replace_all(page, "VfL Bochum", "BOC"),
page = str_replace_all(page, "Bor. Mönchengladbach", "BMG"),
page = str_replace_all(page, "FC Augsburg", "FCA"),
page = str_replace_all(page, "SC Freiburg", "SCF"),
page = str_replace_all(page, "Arminia Bielefeld", "DSC"),
page = str_replace_all(page, "1899 Hoffenheim", "TSG"),
page = str_replace_all(page, "SpVgg Greuther Fürth", "SGF"),
page = str_replace_all(page, "1. FC Union Berlin", "FCU"),
page = str_replace_all(page, "Werder Bremen", "SVW"),
page = str_replace_all(page, "FC Schalke 04", "S04"),
page = str_replace_all(page, "Hamburger SV", "HSV"),
page = str_replace_all(page, "SV Darmstadt 98", "D98"),
page = str_replace_all(page, "FC Ingolstadt 04", "FCI"),
page = str_replace_all(page, "1. FC Nürnberg", "FCN"),
page = str_replace_all(page, "VfB Stuttgart", "VFB"),
page = str_replace_all(page, "Hannover 96", "H96"),
page = str_replace_all(page, "Fortuna Düsseldorf", "F95"),
page = str_replace_all(page, "SC Paderborn", "SCP"))
final_dfString2 <- c(final_df$page)
final_df <- final_df[rep(2:nrow(final_df), 1),]
final_df <- data.frame(String = final_df)
String2 <- rep(seq(1, 34), times = nrow(final_df)/34)
final_df = final_df %>%
separate(col = String, into = c("Day1", "Day2", "Day3", "Day4"), sep = "[0-9][0-9][[:punct:]][0-9][0-9][[:punct:]][0-9][0-9][0-9][0-9]", remove = FALSE)
final_df5 = final_df %>%
mutate(Day2 = paste(str_extract(String, "..........."), Day2),
Day3 = paste(as.numeric(str_extract(final_df$String, ".."))+1,substr(final_dfString, 3, str_length(final_df$Day3))))
final_df5 = final_df %>%
mutate(Day2 = paste(str_extract(String, "..........."), Day2),
Day3 = paste(as.numeric(str_extract(final_df$String, ".."))+1, substr(final_df$String, 3, 10), final_df$Day3))
View(final_df5)
final_df5 <- final_df5 %>%
mutate(Day3 = paste(substr(Day3,1, 2), substr(Day3, 4, length(day3))))
final_df5 <- final_df5 %>%
mutate(Day3 = paste(substr(Day3,1, 2), substr(Day3, 4, str_length(day3))))
str_length(final_df5$day3)
str_length(final_df5$Day3)
final_df5 <- final_df5 %>%
mutate(Day3 = paste(substr(Day3,1, 2), substr(Day3, 4, str_length(Day3))))
final_df5 = final_df %>%
mutate(Day2 = paste(str_extract(String, "..........."), Day2),
Day3 = paste(as.numeric(str_extract(final_df$String, ".."))+1, substr(final_df$String, 3, 10), Day3, sep = ""))
urls <- "https://www.weltfussball.de/spielplan/bundesliga-2016-2017-spieltag/1/"
#page <- read_html(urls) %>%
#  html_node(".standard_tabelle") %>%
#  html_text()
#  df <- as.data.frame(page)
#    final_df <- rbind(final_df, df)
i <- 0
j <- 0
def <- ""
final_df <- ""
for (i in 1:6) {
for (j in 1:34) {
def <- c(urls, def)
urls <- paste0("https://www.weltfussball.de/spielplan/bundesliga-20", i+15, "-20", i+16, "-spieltag/", j, "/")
page <- read_html(urls) %>%
html_node(".standard_tabelle") %>%
html_text()
page <- str_replace_all(page, "\n", " ")
df <- as.data.frame(page)
final_df <- rbind(final_df, df)
}
}
library(tidyverse)
library(rvest)
library(stringr)
library(httr)
library(lubridate)
library(stargazer)
library(kableExtra)
library(pander)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
urls <- "https://www.weltfussball.de/spielplan/bundesliga-2016-2017-spieltag/1/"
#page <- read_html(urls) %>%
#  html_node(".standard_tabelle") %>%
#  html_text()
#  df <- as.data.frame(page)
#    final_df <- rbind(final_df, df)
i <- 0
j <- 0
def <- ""
final_df <- ""
for (i in 1:6) {
for (j in 1:34) {
def <- c(urls, def)
urls <- paste0("https://www.weltfussball.de/spielplan/bundesliga-20", i+15, "-20", i+16, "-spieltag/", j, "/")
page <- read_html(urls) %>%
html_node(".standard_tabelle") %>%
html_text()
page <- str_replace_all(page, "\n", " ")
df <- as.data.frame(page)
final_df <- rbind(final_df, df)
}
}
se <- final_df
uhrzeiten <- c("00:00", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00", "03:30", "04:00", "04:30", "05:00", "05:30", "06:00", "06:30", "07:00", "07:30", "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30")
final_df <- final_df %>%
mutate(page = str_replace_all(page, "Bayern München", "FCB"),
page = str_replace_all(page, "VfL Wolfsburg", "WOB"),
page = str_replace_all(page, "RB Leipzig", "RBL"),
page = str_replace_all(page, "Borussia Dortmund", "BVB"),
page = str_replace_all(page, "Bayer Leverkusen", "B04"),
page = str_replace_all(page, "1. FSV Mainz 05", "M05"),
page = str_replace_all(page, "1. FC Köln", "KOE"),
page = str_replace_all(page, "Eintracht Frankfurt", "SGE"),
page = str_replace_all(page, "Hertha BSC", "BSC"),
page = str_replace_all(page, "VfL Bochum", "BOC"),
page = str_replace_all(page, "Bor. Mönchengladbach", "BMG"),
page = str_replace_all(page, "FC Augsburg", "FCA"),
page = str_replace_all(page, "SC Freiburg", "SCF"),
page = str_replace_all(page, "Arminia Bielefeld", "DSC"),
page = str_replace_all(page, "1899 Hoffenheim", "TSG"),
page = str_replace_all(page, "SpVgg Greuther Fürth", "SGF"),
page = str_replace_all(page, "1. FC Union Berlin", "FCU"),
page = str_replace_all(page, "Werder Bremen", "SVW"),
page = str_replace_all(page, "FC Schalke 04", "S04"),
page = str_replace_all(page, "Hamburger SV", "HSV"),
page = str_replace_all(page, "SV Darmstadt 98", "D98"),
page = str_replace_all(page, "FC Ingolstadt 04", "FCI"),
page = str_replace_all(page, "1. FC Nürnberg", "FCN"),
page = str_replace_all(page, "VfB Stuttgart", "VFB"),
page = str_replace_all(page, "Hannover 96", "H96"),
page = str_replace_all(page, "Fortuna Düsseldorf", "F95"),
page = str_replace_all(page, "SC Paderborn", "SCP"))
final_dfString2 <- c(final_df$page)
final_df <- final_df[rep(2:nrow(final_df), 1),]
final_df <- data.frame(String = final_df)
String2 <- rep(seq(1, 34), times = nrow(final_df)/34)
final_df = final_df %>%
separate(col = String, into = c("Day1", "Day2", "Day3", "Day4"), sep = "[0-9][0-9][[:punct:]][0-9][0-9][[:punct:]][0-9][0-9][0-9][0-9]", remove = FALSE)
final_df5 = final_df %>%
mutate(Day2 = paste(str_extract(String, "..........."), Day2),
Day3 = paste(as.numeric(str_extract(final_df$String, ".."))+1, substr(final_df$String, 3, 10), Day3, sep = ""),
Day4 = paste(as.numeric(str_extract(final_df$String, ".."))+1, substr(final_df$String, 3, 10), Day4, sep = ""))
View(final_df5)
final_df5 = final_df %>%
mutate(Day2 = paste(str_extract(String, "..........."), Day2),
Day3 = paste(as.numeric(str_extract(final_df$String, ".."))+1, substr(final_df$String, 3, 10), Day3, sep = ""),
Day4 = paste(as.numeric(str_extract(final_df$String, ".."))+2, substr(final_df$String, 3, 10), Day4, sep = ""))
final_df5$Day3 <- ifelse(str_extract(Day3, "[0-9][[:punct:]][0-9][0-9][[:punct:]][0-9][0-9][0-9][0-9]"), paste("0", str_extract(Day3, "[0-9][[:punct:]][0-9][0-9][[:punct:]][0-9][0-9][0-9][0-9]", sep = "")), Day3)
final_df5$Day3 <- ifelse(str_extract(final_df5$Day3, "[0-9][[:punct:]][0-9][0-9][[:punct:]][0-9][0-9][0-9][0-9]"), paste("0", str_extract(Day3, "[0-9][[:punct:]][0-9][0-9][[:punct:]][0-9][0-9][0-9][0-9]", sep = "")), final_df5$Day3)
str_extract(final_df5$Day3, "[0-9][[:punct:]][0-9][0-9][[:punct:]][0-9][0-9][0-9][0-9]")
final_df5 = final_df %>%
mutate(Day2 = paste(str_extract(String, "..........."), Day2),
Day3 = paste(as.numeric(str_extract(final_df$String, ".."))+1, substr(final_df$String, 3, 10), Day3, sep = ""),
Day4 = paste(as.numeric(str_extract(final_df$String, ".."))+2, substr(final_df$String, 3, 10), Day4, sep = ""))
final_df5 <- final_df5[,c(3,4,5)]
ZwischenData <- rbind(final_df5[,c(3)], final_df5[,c(4)], final_df5[,c(5)])
final_df6 <- final_df5[,c(3)] %>%
rename(Day2 = String)
final_df6 <- final_df5[,c(3)] %>%
rename("Day2" = "String")
final_df6 <- final_df5[,c(3)] %>%
rename("String" = "Day2")
final_df6 <- final_df5[,c(3)] %>%
rename(String = Day2)
final_df6 <- final_df5[,c(3)] %>%
set_names(Day2, old = c("Day2"), new = c("String"))
final_df6 <- final_df5[,c(1)] %>%
set_names(Day2, old = c("Day2"), new = c("String"))
final_df5[,c(1)]
final_df6 <- final_df5[,c(1)] %>%
set_names(final_df$Day2, old = c("Day2"), new = c("String"))
install.packages("RTutor",repos = c("https://skranz-repo.github.io/drat/",getOption("repos")))
library(RTutor)
#library(restorepoint)
setwd("C:/folder_of_this_solution_file")
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket/replication/data")
#< task
#use readRDS("file_name.RDS") to load your data
#>
data <- readRDS("dataEst.RDS")
#< hint
cat("d__a <- re_dR__('da__Es_.RD_'.")
#>
A_B_params <- read_dta("A_B_params.dta")
library(haven)
library(ggplot2)
library(stargazer)
library(kableExtra)
library(tidyverse)
library(janitor)
library(cowplot)
library(ivreg)
library(tinytex)
library(lfe)
library(dplyr)
library(zoo)
library(broom)
library(fixest)
library(modelsummary)
library(gt)
A_B_params <- read_dta("A_B_params.dta")
A_B_params_bs <- read_dta("A_B_params_bs.dta")
pw_weekly <- read_dta("pw_weekly.dta")
sigma <- read_dta("sigma.dta")
nielsen <- read_dta("nielsen_notables_spine.dta")
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket/replication/materials_for_confidential_data")
nielsen <- read_dta("nielsen_notables_spine.dta")
data <- data %>%
mutate(lrR_50 = ntile(lreview, 50))
regRev_agg <- aggregate(data$lreview, by = list(data$lrR_50), FUN = mean)
colnames(regRev_agg) <- c("lrR_50", "log.review")
data <- merge(data, regRev_agg, by = "lrR_50")
#glue formula
reg6 <- feols(lrank ~ L1.lrank + lpamzn + lreview + log.review + lR + lrR_50 + log.review + dnytpost1_1 + dnytpost1_2 + dnytpost1_3 + dnytpost6_1 + dnytpost6_2 + dnytpost6_3  + dnytpost10_1 + dnytpost10_2 + dnytpost10_3 + dothpost_1 + dothpost_2 + dothpost_3 + dnytpostpre_1 + dnytpostpre_2 + dnytpostpre_3 + dothpostpre_1 + dothpostpre_2 + dothpostpre_3 + dnytpostprer_1  + dnytpostprer_2  + dnytpostprer_3  + dothpost10_1  + dothpost10_2  + dothpost10_3  + dnytpost1r_3 + dnytpost1r_2 + dnytpost1r_3 + dnytpost6r_1 + dnytpost6r_2 + dnytpost6r_3 + dnytpost10r_1 + dnytpost10r_2 + dnytpost10r_3 + epos + epos2 + epos3 + eneg + eneg2 + eneg3 | canum, vcov = "hetero", data = data)
data$gamma1 <- 0
data$gamma1 <- ifelse((!is.na(data$lreview) & !is.na(data$lR)),  A_B_params[1,2] * (data$lR + data$lreview * reg6$coefficients["lR"]) / (1 - reg6$coefficients["L1.lrank"]))
data$alpha1 <- A_B_params[1,2] * reg6$coefficients["pamzn"] / (1 - reg6$coefficients["L1.lrank"])
reg6$coefficients["pamzn"]
data$alpha1 <- A_B_params[1,2] * reg6$coefficients["lpamzn"] / (1 - reg6$coefficients["L1.lrank"])
A_B_params[1,2]
reg6$coefficients["lpamzn"]
reg6$coefficients["L1.lrank"]
a <- reg6$coefficients["L1.lrank"]
data$alpha1 <- (A_B_params[1,2] * reg6$coefficients["lpamzn"]) / (1 - reg6$coefficients["L1.lrank"])
1 + 1
data$alpha1 <- A_B_params[1,2] * (reg6$coefficients["lpamzn"] / (1 - reg6$coefficients["L1.lrank"]))
alpha1 <- A_B_params[1,2] * (reg6$coefficients["lpamzn"] / (1 - reg6$coefficients["L1.lrank"]))
View(A_B_params_bs)
View(alpha1)
B <- A_B_params(1,2)
B <- A_B_params[1,2]
B <- c(A_B_params[1,2])
data$e1 <- A_B_params[1,2] * (data$dnytpost1_3 * data$dnytpost1_3 + data$dnytpost6_3 * data$dnytpost6_3 +
data$dnytpost10_3 * data$dnytpost10_3 + data$dothpost_3 * data$dothpost_3 +
data$dothpost10_3 * data$dothpost10_3 + data$dnytpost1r_3 * data$dnytpost1r_3 +
data$dnytpost6r_3 * data$dnytpost6r_3 + data$dnytpost10r_3 * data$dnytpost10r_3) / (1 - reg6$coefficients["L1.lrank"])
data$q1 <- (A) / exp(A_B_params[1,2] * data$lrank - data$e1)
data$q <- A_B_params[1,1] / exp(A_B_params[1,2] * data$lrank)
View(sigma)
data$e1 <- A_B_params[1,2] * (data$dnytpost1_3 * data$dnytpost1_3 + data$dnytpost6_3 * data$dnytpost6_3 +
data$dnytpost10_3 * data$dnytpost10_3 + data$dothpost_3 * data$dothpost_3 +
data$dothpost10_3 * data$dothpost10_3 + data$dnytpost1r_3 * data$dnytpost1r_3 +
data$dnytpost6r_3 * data$dnytpost6r_3 + data$dnytpost10r_3 * data$dnytpost10r_3) / (1 - reg6$coefficients["L1.lrank"])
data$e1 <- A_B_params[1,2] * (data$dnytpost1_3 * data$dnytpost1_3 + data$dnytpost6_3 * data$dnytpost6_3 +
data$dnytpost10_3 * data$dnytpost10_3 + data$dothpost_3 * data$dothpost_3 +
data$dothpost10_3 * data$dothpost10_3 + data$dnytpost1r_3 * data$dnytpost1r_3 +
data$dnytpost6r_3 * data$dnytpost6r_3 + data$dnytpost10r_3 * data$dnytpost10r_3) / (1 - reg6$coefficients["L1.lrank"])
data$e1 <- A_B_params[1,2] * (data$dnytpost1_3 * data$dnytpost1_3 / (1 - reg6$coefficients["L1.lrank"]) +
data$dnytpost6_3 * data$dnytpost6_3 / (1 - reg6$coefficients["L1.lrank"]) +
data$dnytpost10_3 * data$dnytpost10_3 / (1 - reg6$coefficients["L1.lrank"]) +
data$dothpost_3 * data$dothpost_3 / (1 - reg6$coefficients["L1.lrank"]) +
data$dothpost10_3 * data$dothpost10_3 / (1 - reg6$coefficients["L1.lrank"]) +
data$dnytpost1r_3 * data$dnytpost1r_3 / (1 - reg6$coefficients["L1.lrank"]) +
data$dnytpost6r_3 * data$dnytpost6r_3 + data$dnytpost10r_3 * data$dnytpost10r_3 / (1 - reg6$coefficients["L1.lrank"]))
e1 <- A_B_params[1,2] * (data$dnytpost1_3 * data$dnytpost1_3 +
data$dnytpost6_3 * data$dnytpost6_3 +
data$dnytpost10_3 * data$dnytpost10_3 +
data$dothpost_3 * data$dothpost_3 +
data$dothpost10_3 * data$dothpost10_3 +
data$dnytpost1r_3 * data$dnytpost1r_3 +
data$dnytpost6r_3 * data$dnytpost6r_3 +
data$dnytpost10r_3 * data$dnytpost10r_3) / (1 - reg6$coefficients["L1.lrank"])
q1 <- A_B_params[1,1] / exp(A_B_params[1,2] * data$lrank - data$e1)
e1 <- A_B_params[1,2] * (data$dnytpost1_3 * data$dnytpost1_3 +
data$dnytpost6_3 * data$dnytpost6_3 +
data$dnytpost10_3 * data$dnytpost10_3 +
data$dothpost_3 * data$dothpost_3 +
data$dothpost10_3 * data$dothpost10_3 +
data$dnytpost1r_3 * data$dnytpost1r_3 +
data$dnytpost6r_3 * data$dnytpost6r_3 +
data$dnytpost10r_3 * data$dnytpost10r_3) / (1 - reg6$coefficients["L1.lrank"])
q1 <- A_B_params[1,1] / exp(A_B_params[1,2] * data$lrank - data$e1)
q1 <- A_B_params[1,1] / exp(A_B_params[1,2] * data$lrank - e1)
q <- A_B_params[1,1] / exp(A_B_params[1,2] * data$lrank)
e1
q
q1
View(B)
A_B_params[1,2]
e1 <- A_B_params[1,2] * (data$dnytpost1_3 * data$dnytpost1_3 +
data$dnytpost6_3 * data$dnytpost6_3 +
data$dnytpost10_3 * data$dnytpost10_3 +
data$dothpost_3 * data$dothpost_3 +
data$dothpost10_3 * data$dothpost10_3 +
data$dnytpost1r_3 * data$dnytpost1r_3 +
data$dnytpost6r_3 * data$dnytpost6r_3 +
data$dnytpost10r_3 * data$dnytpost10r_3) / (1 - reg6$coefficients["L1.lrank"])
View(e1)
e1 <- A_B_params[1,2] * (data$dnytpost1_3 * data$dnytpost1_3 +
data$dnytpost6_3 * data$dnytpost6_3 +
data$dnytpost10_3 * data$dnytpost10_3 +
data$dothpost_3 * data$dothpost_3 +
data$dothpost10_3 * data$dothpost10_3 +
data$dnytpost1r_3 * data$dnytpost1r_3 +
data$dnytpost6r_3 * data$dnytpost6r_3 +
data$dnytpost10r_3 * data$dnytpost10r_3)
View(e1)
data$dnytpost1_3 * data$dnytpost1_3
(data$dnytpost1_3 * data$dnytpost1_3 +
data$dnytpost6_3 * data$dnytpost6_3 +
data$dnytpost10_3 * data$dnytpost10_3 +
data$dothpost_3 * data$dothpost_3 +
data$dothpost10_3 * data$dothpost10_3 +
data$dnytpost1r_3 * data$dnytpost1r_3 +
data$dnytpost6r_3 * data$dnytpost6r_3 +
data$dnytpost10r_3 * data$dnytpost10r_3)
data$dnytpost1_3 * data$dnytpost1_3 +
data$dnytpost6_3 * data$dnytpost6_3 +
data$dnytpost10_3 * data$dnytpost10_3 +
data$dothpost_3 * data$dothpost_3 +
data$dothpost10_3 * data$dothpost10_3 +
data$dnytpost1r_3 * data$dnytpost1r_3 +
data$dnytpost6r_3 * data$dnytpost6r_3 +
data$dnytpost10r_3 * data$dnytpost10r_3
(1 - reg6$coefficients["L1.lrank"])
e1 <- A_B_params[1,2] * (reg6$coefficients["dnytpost1_3"] * reg6$coefficients["dnytpost1_3"] +
reg6$coefficients["dnytpost6_3"] * reg6$coefficients["dnytpost6_3"] +
reg6$coefficients["dnytpost10_3"] * reg6$coefficients["dnytpost10_3"] +
reg6$coefficients["dothpost_3"] * reg6$coefficients["dothpost_3"] +
reg6$coefficients["dothpost10_3"] * reg6$coefficients["dothpost10_3"] +
reg6$coefficients["dnytpost1r_3"] * reg6$coefficients["dnytpost1r_3"] +
reg6$coefficients["dnytpost6r_3"] * reg6$coefficients["dnytpost6r_3"] +
reg6$coefficients["dnytpost10r_3"] * reg6$coefficients["dnytpost10r_3"]) / (1 - reg6$coefficients["L1.lrank"])
View(e1)
q1 <- A_B_params[1,1] / exp(A_B_params[1,2] * data$lrank - e1)
q <- A_B_params[1,1] / exp(A_B_params[1,2] * data$lrank)
e1
q
q1
data <- data %>%
group_by(asin) %>%
mutate(maxdate = max(ddate), avgR = mean(R))
summary(data$gno)
reg9 <- feols(avgR ~ numbooks + gno | pubno, data = dataUS)
dataUS <- data %>%
filter(country == "US", ddate >= "2018-01-01" & ddate <= "2018-12-31") %>%
arrange(canum, ddate)
reg9 <- feols(avgR ~ numbooks + gno | pubno, data = dataUS)
dataUS <- dataUS %>%
group_by(asin) %>%
mutate(maxdate = max(ddate), avgR = mean(R))
dataUS <- dataUS %>%
filter(ddate == maxdate)
Rhat <- predict(reg9)
lRhat <- log(Rhat)
data$e1 <- A_B_params[1,2] * (reg6$coefficients["dnytpost1_3"] * reg6$coefficients["dnytpost1_3"] +
reg6$coefficients["dnytpost6_3"] * reg6$coefficients["dnytpost6_3"] +
reg6$coefficients["dnytpost10_3"] * reg6$coefficients["dnytpost10_3"] +
reg6$coefficients["dothpost_3"] * reg6$coefficients["dothpost_3"] +
reg6$coefficients["dothpost10_3"] * reg6$coefficients["dothpost10_3"] +
reg6$coefficients["dnytpost1r_3"] * reg6$coefficients["dnytpost1r_3"] +
reg6$coefficients["dnytpost6r_3"] * reg6$coefficients["dnytpost6r_3"] +
reg6$coefficients["dnytpost10r_3"] * reg6$coefficients["dnytpost10r_3"]) / (1 - reg6$coefficients["L1.lrank"])
data$q1 <- A_B_params[1,1] / exp(A_B_params[1,2] * data$lrank - e1)
data$q <- A_B_params[1,1] / exp(A_B_params[1,2] * data$lrank)
ataUS <- data %>%
filter(cno == 3)
dataUS <- dataUS %>%
group_by(asin) %>%
mutate(maxdate = max(ddate), avgR = mean(R))
dataUS <- dataUS %>%
filter(ddate == maxdate)
reg9 <- feols(avgR ~ numbooks + gno | pubno, data = dataUS)
Rhat <- predict(reg9)
lRhat <- log(Rhat)
dataUS <- dataUS %>% mutate(DOTH = ifelse(!is.na(OTHDATE), 1, 0))
summary_data <- dataUS %>%
group_by(asin, genre) %>%
summarise(
sum_q = sum(q),
sum_q1 = sum(q1),
mean_e1 = mean(e1),
mean_gamma1 = mean(gamma1),
mean_alpha1 = mean(alpha1),
mean_p = mean(p),
mean_lR = mean(lR),
mean_lRhat = mean(lRhat),
mean_R = mean(R),
mean_Rhat = mean(Rhat),
mean_sigma = mean(sigma),
mean_avgR = mean(avgR),
max_DNYT = max(DNYT),
max_DOTH = max(DOTH),
max_DUSAT = max(DUSAT),
mean_lreview = mean(lreview),
mean_drecommend = mean(drecommend)
)
data$p
