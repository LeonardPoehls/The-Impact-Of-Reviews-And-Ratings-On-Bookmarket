str_extract(final_df5$Day3, "[0-9][[:punct:]][0-9][0-9][[:punct:]][0-9][0-9][0-9][0-9]")
final_df5 = final_df %>%
mutate(Day2 = paste(str_extract(String, "..........."), Day2),
Day3 = paste(as.numeric(str_extract(final_df$String, ".."))+1, substr(final_df$String, 3, 10), Day3, sep = ""),
Day4 = paste(as.numeric(str_extract(final_df$String, ".."))+2, substr(final_df$String, 3, 10), Day4, sep = ""))
final_df5 <- final_df5[,c(3,4,5)]
ZwischenData <- rbind(final_df5[,c(3)], final_df5[,c(4)], final_df5[,c(5)])
final_df6 <- final_df5[,c(3)] %>%
rename(Day2 = String)
final_df6 <- final_df5[,c(3)] %>%
rename("Day2" = "String")
final_df6 <- final_df5[,c(3)] %>%
rename("String" = "Day2")
final_df6 <- final_df5[,c(3)] %>%
rename(String = Day2)
final_df6 <- final_df5[,c(3)] %>%
set_names(Day2, old = c("Day2"), new = c("String"))
final_df6 <- final_df5[,c(1)] %>%
set_names(Day2, old = c("Day2"), new = c("String"))
final_df5[,c(1)]
final_df6 <- final_df5[,c(1)] %>%
set_names(final_df$Day2, old = c("Day2"), new = c("String"))
install.packages("RTutor",repos = c("https://skranz-repo.github.io/drat/",getOption("repos")))
library(RTutor)
#library(restorepoint)
setwd("C:/folder_of_this_solution_file")
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
#< task
#Create a fictive Dataset
demand <- c(2, 1.5, 1, 0.5, 0)
xAxis <- c(0, 1,2,3,4)
supply <- c(0, 0.5, 1, 1.5, 2)
xGroup <- c(1, 1, 1, 1, 1)
DatasetTest <- data.frame(Price = demand, Quantity = xAxis, Supply = supply, Group = xGroup)
#Create a plot
ggplot(data = DatasetTest) +
geom_line(aes(x=Quantity, y=Price, group = Group), linetype = 1, size = 0.8) +
geom_line(aes(x=Quantity, y=supply, group = Group), linetype = 1, size = 0.8) +
geom_segment(aes(x = 2, y = 0, xend = 2, yend = 1), color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 1, xend = 2, yend = 1), color = "red", linetype = "dashed") +
#Mark Zone A
geom_text(aes(x=0.5, y=1.3, label = "A"), color = "black", hjust=0, size=8, alpha = 0.1) +
#Mark Zone B
geom_text(aes(x=0.5, y=0.7, label = "B"), color = "black", hjust=0, size=8, alpha = 0.1) +
#Mark Zone C
geom_text(aes(x=1.5, y=0.3, label = "C"), color = "black", hjust=0, size=8, alpha = 0.1) +
#Mark intersection point
geom_point(aes(x = 2, y=1), color = "red", size=2.5) +
#Add line description
geom_text(aes(x=0.5, y=1.83, label = "Demand"), color = "Black", angle = 332, size= 4, alpha=0.1) +
geom_text(aes(x=3.35, y=1.78, label = "Supply"), color = "Black", angle = 28, size= 4, alpha=0.1) +
#Set specific layout
theme_bw() +
labs(title = "How is Pre-Purchase Information related to Welfare?",
x = "Quantity",
y = "Price") +
scale_x_continuous(labels = c("0", "", "Q*", "", "")) +
scale_y_continuous(labels = c("0", "", "P*", "", "")) +
theme(
# axis.text.y=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
#>
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
stop.without.error()
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
stop.without.error()
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
stop.without.error()
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
stop.without.error()
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
library(haven)
library(ggplot2)
library(stargazer)
library(kableExtra)
library(tidyverse)
library(janitor)
library(cowplot)
library(ivreg)
library(tinytex)
library(lfe)
library(plm)
library(dplyr)
library(zoo)
library(broom)
library(fixest)
library(modelsummary)
library(gt)
#Table 1 Replication
#saveRDS(dataEst, file = "The-Impact-Of-Reviews-And-Ratings-On-Bookmarket/replication/data/dataEst.RDS")
# Descriptive Values differentiated by country
dataDesKript <- data %>%
group_by(country) %>%
summarize(Price = round(mean(pamzn),2),
Star_Rating = round(mean(R),2),
Sales_Rank = round(mean(rank),2),
Number_of_Ratings = round(mean(review), 2),
Teenth = quantile(R, probs = 0.1, na.rm = TRUE),
Tweentyfifth = quantile(R, probs = 0.25, na.rm = TRUE),
Fiftith = quantile(R, probs = 0.5, na.rm = TRUE),
Seventyfifth = quantile(R, probs = 0.75, na.rm = TRUE),
Ninetith = quantile(R, probs = 0.9, na.rm = TRUE),
Titles = n_distinct(titleno),
Observations = NROW(country),
Editions = n_distinct(asin))
library(haven)
library(ggplot2)
library(stargazer)
library(kableExtra)
library(tidyverse)
library(janitor)
library(cowplot)
library(ivreg)
library(tinytex)
library(lfe)
library(plm)
library(dplyr)
library(zoo)
library(broom)
library(fixest)
library(modelsummary)
library(gt)
library(haven)
library(ggplot2)
library(stargazer)
library(kableExtra)
library(tidyverse)
library(janitor)
library(cowplot)
library(ivreg)
library(tinytex)
library(lfe)
library(plm)
library(dplyr)
library(zoo)
library(broom)
library(fixest)
library(modelsummary)
#library(gt)
#Table 1 Replication
#saveRDS(dataEst, file = "The-Impact-Of-Reviews-And-Ratings-On-Bookmarket/replication/data/dataEst.RDS")
# Descriptive Values differentiated by country
dataDesKript <- data %>%
group_by(country) %>%
summarize(Price = round(mean(pamzn),2),
Star_Rating = round(mean(R),2),
Sales_Rank = round(mean(rank),2),
Number_of_Ratings = round(mean(review), 2),
Teenth = quantile(R, probs = 0.1, na.rm = TRUE),
Tweentyfifth = quantile(R, probs = 0.25, na.rm = TRUE),
Fiftith = quantile(R, probs = 0.5, na.rm = TRUE),
Seventyfifth = quantile(R, probs = 0.75, na.rm = TRUE),
Ninetith = quantile(R, probs = 0.9, na.rm = TRUE),
Titles = n_distinct(titleno),
Observations = NROW(country),
Editions = n_distinct(asin))
library(haven)
library(ggplot2)
library(stargazer)
library(kableExtra)
library(tidyverse)
library(janitor)
library(cowplot)
library(ivreg)
library(tinytex)
library(lfe)
library(plm)
library(dplyr)
library(zoo)
library(broom)
library(fixest)
library(modelsummary)
library(gt)
library(haven)
library(ggplot2)
library(stargazer)
library(kableExtra)
library(tidyverse)
library(janitor)
library(cowplot)
library(ivreg)
library(tinytex)
library(lfe)
library(plm)
library(dplyr)
library(zoo)
library(broom)
library(fixest)
library(modelsummary)
#library(gt)
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit")
data <- readRDS("The-Impact-Of-Reviews-And-Ratings-On-Bookmarket/replication/data/dataEst.RDS")
#Table 1 Replication
#saveRDS(dataEst, file = "The-Impact-Of-Reviews-And-Ratings-On-Bookmarket/replication/data/dataEst.RDS")
# Descriptive Values differentiated by country
dataDesKript <- data %>%
group_by(country) %>%
summarize(Price = round(mean(pamzn),2),
Star_Rating = round(mean(R),2),
Sales_Rank = round(mean(rank),2),
Number_of_Ratings = round(mean(review), 2),
Teenth = quantile(R, probs = 0.1, na.rm = TRUE),
Tweentyfifth = quantile(R, probs = 0.25, na.rm = TRUE),
Fiftith = quantile(R, probs = 0.5, na.rm = TRUE),
Seventyfifth = quantile(R, probs = 0.75, na.rm = TRUE),
Ninetith = quantile(R, probs = 0.9, na.rm = TRUE),
Titles = n_distinct(titleno),
Observations = NROW(country),
Editions = n_distinct(asin))
# Descriptive Values for all countries
dataDesKript2 <- data %>%
summarize(country = "All",
Price = round(mean(pamzn),2),
Star_Rating = round(mean(R),2),
Sales_Rank = round(mean(rank),2),
Number_of_Ratings = round(mean(review), 2),
Teenth = quantile(R, probs = 0.1, na.rm = TRUE),
Tweentyfifth = quantile(R, probs = 0.25, na.rm = TRUE),
Fiftith = quantile(R, probs = 0.5, na.rm = TRUE),
Seventyfifth = quantile(R, probs = 0.75, na.rm = TRUE),
Ninetith = quantile(R, probs = 0.9, na.rm = TRUE),
Titles = n_distinct(titleno),
Observations = length(asin),
Editions = n_distinct(asin))
# Merge Dataframes
DataDes <- rbind(dataDesKript, dataDesKript2)
# Transform Dataframe into a clearer schema
DataDesTest <- t(DataDes)
colnames(DataDesTest) <- rownames(DataDes)
DataDescriptive <- as.data.frame(DataDesTest)
colnames(DataDescriptive) <- unlist(DataDescriptive[1,])
DataDescriptive <- DataDescriptive[-1,]
# Change Row Names
row.names(DataDescriptive) = c("Price", "Star rating", "Sales rank", "Number of ratings", "10th", "25th", "50th", "75th", "90th", "Titles", "Observations", "Editions")
# Kable-Function to create an attractive overview
DataDescriptive %>%
kbl(col.names = c("CA" = "Canada", "GB" = "Great Britain", "US" = "United States", "All" = "All"), caption = "Group Rows") %>%
kable_paper("striped", full_width = TRUE) %>%
pack_rows("Star rating percentiles", 5, 9) %>%
pack_rows("", 10, 12)
#Table 2 - Data Transformation
#Transform data structure
data <- data %>%
arrange(canum, ddate)
prev_btitle <- NULL
prev_lrank <- NULL
new_lrank <- NULL
for (i in 1:nrow(data)) {
if (i == 1 || data$canum[i] != prev_btitle) {
new_lrank[i] <- data$lrank[i]
} else {
new_lrank[i] <- prev_lrank
}
prev_btitle <- data$canum[i]
prev_lrank <- data$lrank[i]
}
data$L1.rank <- new_lrank
dataTest <- data[,c(4, 21, 67, 70)]
#Transform dnyt
data <- data %>%
mutate(dnytpost1 = ifelse(NYT_elapse >= 1 & NYT_elapse <= 5, 1, 0),
dnytpost6 = ifelse(NYT_elapse >= 6 & NYT_elapse <= 10, 1, 0),
dnytpost10Test = ifelse(NYT_elapse >= 11 & NYT_elapse <= 20, 1, 0),
dnytpostpreTest = ifelse(NYT_elapse >= -10 & NYT_elapse <= 20, 1, 0),
dothpostTest = ifelse(OTH_elapse >= 1 & OTH_elapse <= 10, 1, 0),
dothpost10Test = ifelse(OTH_elapse >= 11 & OTH_elapse <= 20, 1, 0),
dothpostpreTest = ifelse(OTH_elapse >= -10 & OTH_elapse <= 20, 1, 0),
dnytpost10Test = ifelse(is.na(NYT_elapse), 0, dnytpost10Test),
dnytpostpreTest = ifelse(is.na(NYT_elapse), 0, dnytpostpreTest),
dothpostTest = ifelse(is.na(OTH_elapse), 0, dothpostTest),
dothpost10Test = ifelse(is.na(OTH_elapse), 0, dothpost10Test),
dothpostpreTest = ifelse(is.na(OTH_elapse), 0, dothpostpreTest),
dnytpost1 = ifelse(is.na(NYT_elapse), 0, dnytpost1),
dnytpost6 = ifelse(is.na(NYT_elapse), 0, dnytpost6),
dnytpost10 = ifelse(is.na(NYT_elapse), 0, dnytpost10),
dothpost = ifelse(is.na(NYT_elapse), 0, dothpost),
dnytpost10 = ifelse(is.na(NYT_elapse), 0, dnytpost10))
for (x in c("NYT", "OTH")) {
for (k in 0:40) {
data[, paste0("D", x, k)] <- as.integer(data[, paste0(x, "_elapse")] == k)
data[, paste0("D", x, k)] <- replace(data[, paste0("D", x, k)], is.na(data[, paste0("D", x, k)]), 0)
}
for (k in 1:20) {
data[, paste0("D", x, "m", k)] <- as.integer(data[, paste0(x, "_elapse")] == -1 * k)
data[, paste0("D", x, "m", k)] <- replace(data[, paste0("D", x, "m", k)], is.na(data[, paste0("D", x, "m", k)]), 0)
}
}
for (k in 1:3) {
data[, paste0("dnytpost1_", k)] <- data$dnytpost1 * (data$cno == k) * (data$drecommended == 0)
data[, paste0("dnytpost6_", k)] <- data$dnytpost6 * (data$cno == k) * (data$drecommended == 0)
data[, paste0("dnytpost10_", k)] <- data$dnytpost10 * (data$cno == k) * (data$drecommended == 0)
data[, paste0("dnytpostpre_", k)] <- data$dnytpostpre * (data$cno == k) * (data$drecommended == 0)
data[, paste0("dothpost_", k)] <- data$dothpost * (data$cno == k)
data[, paste0("dothpost10_", k)] <- data$dothpost10 * (data$cno == k)
data[, paste0("dothpostpre_", k)] <- data$dothpostpre * (data$cno == k)
data[, paste0("dnytpost1r_", k)] <- data$dnytpost1 * (data$cno == k) * data$drecommended
data[, paste0("dnytpost6r_", k)] <- data$dnytpost6 * (data$cno == k) * data$drecommended
data[, paste0("dnytpost10r_", k)] <- data$dnytpost10 * (data$cno == k) * data$drecommended
data[, paste0("dnytpostprer_", k)] <- data$dnytpostpre * (data$cno == k) * data$drecommended
}
#T <- data[,c(29, 74)]
#Add neccessary columns to differentiate between countries and times etc.
dataUS <- data %>%
filter(country == "US") %>%
arrange(ddate, canum)
#Table 2
#Regression 1, 2, 3 for US Data
#Regression 1
#reghdfe lrank L1.lrank lpamzn lreview lR  DNYT* DOTH* epos* eneg* if cno==3, absorb(canum) vce(robust)
reg1 <- feols(lrank ~ L1.rank + lpamzn + lreview + lR + DNYT + DNYT0 + DNYT1 + DNYT2 + DNYT3 +DNYT4 + DNYT5 + DNYT6 + DNYT7 + DNYT8 + DNYT9 + DNYT10 + DNYT11 + DNYT12 + DNYT13 +DNYT14 + DNYT15 +DNYT16 + DNYT17 +DNYT18 +DNYT19 + DNYT20 + DNYT21 + DNYT22 + DNYT23 + DNYT24 + DNYT25 + DNYT26 + DNYT27 + DNYT28 + DNYT29 + DNYT30 + DNYT31 + DNYT32 + DNYT33 + DNYT34 + DNYT35 + DNYT36 + DNYT37 + DNYT38 + DNYT39 +DNYT40 + DNYTm1 + DNYTm2 + DNYTm3 + DNYTm4 + DNYTm5 + DNYTm6 + DNYTm7 + DNYTm8 + DNYTm9 + DNYTm10 + DNYTm11 + DNYTm12 + DNYTm13 + DNYTm14 + DNYTm15 + DNYTm16 + DNYTm17 + DNYTm18 + DNYTm19 + DNYTm20 + DOTH0 + DOTH1 + DOTH2 + DOTH3 +DOTH4 + DOTH5 + DOTH6 + DOTH7 + DOTH8 + DOTH9 + DOTH10 + DOTH11 + DOTH12 + DOTH13 + DOTH14 + DOTH15 +DOTH16 + DOTH17 + DOTH18 + DOTH19 + DOTH20 + DOTH21 + DOTH22 + DOTH23 + DOTH24 + DNYT25 + DNYT26 + DNYT27 + DNYT28 + DNYT29 + DNYT30 + DNYT31 + DNYT32 + DNYT33 + DNYT34 + DNYT35 + DNYT36 + DNYT37 + DNYT38 + DOTH39 +DOTH40 + DOTHm1 + DOTHm2 + DOTHm3 + DOTHm4 + DOTHm5 + DOTHm6 + DOTHm7 + DOTHm8 + DOTHm9 + DOTHm10 + DOTHm11 + DOTHm12 + DOTHm13 + DOTHm14 + DOTHm15 + DOTHm16 + DOTHm17 + DOTHm18 + DOTHm19 + DOTHm20 + epos + epos2 + epos3 + eneg + eneg2 + eneg3 | canum, vcov = "hetero", data = dataUS)
#Regression 2
#reghdfe lrank L1.lrank  lpamzn lreview lR  dnytpost1_3 dnytpost6_3 dnytpost10_3 dnytpost1r_3 dnytpost6r_3 dnytpost10r_3 #dnytpostprer_* dothpost_3 dothpost10_3  dnytpostpre_* dothpostpre_* epos* eneg* if cno==3, absorb(ano) vce(robust)
reg2 <- feols(lrank ~ L1.rank + lpamzn + lreview + lR  + dnytpost1_3 + dnytpost6_3 +  dnytpost10_3 + dothpost_3 + dothpost10_3 + dnytpostpre_1 + dnytpostpre_2 + dnytpostpre_3 + dothpostpre_1 + dothpostpre_2 + dothpostpre_3 + dnytpost1r_3 + dnytpost6r_3 + dnytpost10r_3 + dnytpostprer_1 + dnytpostprer_2 + dnytpostprer_3 + epos + epos2 + epos3 + eneg + eneg2 + eneg3 | ano, vcov = "hetero", data = dataUS)
#Regression 3
#reghdfe lrank L1.lrank  lpamzn lreview lR lrR  dnytpost1_3 dnytpost6_3 dnytpost10_* dothpost_* dothpost10_*  dnytpostpre_* dothpostpre_* dnytpost1r_3 dnytpost6r_3 dnytpost10r_3 dnytpostprer_* epos* eneg* if cno==3, absorb(ano) vce(robust)
reg3 <- feols(lrank ~ L1.rank + lpamzn + lreview + lR + lrR + dnytpost1_3 + dnytpost6_3 + dnytpost10_1 + dnytpost10_2 +  dnytpost10_3 + dothpost_1 + dothpost_2 + dothpost_3 + dothpost10_1 + dothpost10_2 + dothpost10_3 + dnytpostpre_1 + dnytpostpre_2 + dnytpostpre_3 + dothpostpre_1 + dothpostpre_2 + dothpostpre_3 + dnytpost1r_3 + dnytpost6r_3 + dnytpost10r_3 + dnytpostprer_1 + dnytpostprer_2 + dnytpostprer_3 + epos + epos2 + epos3 + eneg + eneg2 + eneg3 | ano, vcov = "hetero", data = dataUS)
#Transform data including all data
#Regression 4, 5 for US, CA and GB Data
#reghdfe lrank L1.lrank  lpamzn lreview lR   dnytpost1_*  dnytpost6_* dnytpost10_* dothpost_* dothpost10_*  dnytpostpre_* dothpostpre_* dnytpost1r_* dnytpost6r_* dnytpost10r_* dnytpostprer_* epos* eneg*, absorb(canum) vce(robust)
#Regression 4
reg4 <- feols(lrank ~ L1.rank + lpamzn + lreview + lR  + dnytpost1_1 + dnytpost1_2 + dnytpost1_3 + dnytpost6_1 + dnytpost6_2 + dnytpost6_3 + dnytpost10_1 + dnytpost10_2 +  dnytpost10_3 + dothpost_1 + dothpost_2 + dothpost_3 + dothpost10_1 + dothpost10_2 + dothpost10_3 + dnytpostpre_1 + dnytpostpre_2 + dnytpostpre_3 + dothpostpre_1 + dothpostpre_2 + dothpostpre_3 + dnytpost1r_1 + dnytpost1r_2 + dnytpost1r_3 + dnytpost6r_1 + dnytpost6r_2 + dnytpost6r_3 + dnytpost10r_1 + dnytpost10r_2 + dnytpost10r_3 + dnytpostprer_1 + dnytpostprer_2 + dnytpostprer_3 + epos + epos2 + epos3 + eneg + eneg2 + eneg3 | canum, vcov = "hetero", data = data)
#reghdfe lrank L1.lrank  lpamzn lreview lR  lrR  dnytpost1_* dnytpost6_* dnytpost10_* dothpost_* dothpost10_*  dnytpostpre_* dothpostpre_* dnytpost1r_* dnytpost6r_* dnytpost10r_* dnytpostprer_* epos* eneg*, absorb(canum) vce(robust)
#Regression 5
reg5 <- feols(lrank ~ L1.rank + lpamzn + lreview + lR + lrR + dnytpost1_1 + dnytpost1_2 + dnytpost1_3 + dnytpost6_1 + dnytpost6_2 + dnytpost6_3 + dnytpost10_1 + dnytpost10_2 +  dnytpost10_3 + dothpost_1 + dothpost_2 + dothpost_3 + dothpost10_1 + dothpost10_2 + dothpost10_3 + dnytpostpre_1 + dnytpostpre_2 + dnytpostpre_3 + dothpostpre_1 + dothpostpre_2 + dothpostpre_3 + dnytpost1r_1 + dnytpost1r_2 + dnytpost1r_3 + dnytpost6r_1 + dnytpost6r_2 + dnytpost6r_3 + dnytpost10r_1 + dnytpost10r_2 + dnytpost10r_3 + dnytpostprer_1 + dnytpostprer_2 + dnytpostprer_3 + epos + epos2 + epos3 + eneg + eneg2 + eneg3 | canum, vcov = "hetero", data = data)
panel1 <- list("Standard Values" = reg1$coefficients[1:4])
panel2 <- list("Standard Values" = reg2$coefficients[1:4],
"NYT not recommended" = reg2$coefficients[c(5,6,7,9)])
rows <- c("NYT not recommended", "NYT recommended", "Other paper")
RegTable <- modelsummary(list(reg1, reg2, reg3, reg4, reg5), statistic = "({std.error})", coef_omit = "DOTH|DNYT|epos|eneg|postpre|_1|_2", coef_rename = c("L1.rank" = "Lagged log sales rank", "lpamzn" = "Log Amazon price", "lreview" = "Number of ratings", "lR" = "log star rating","lrR" = "log number of ratings x log stars", "dnytpost1_3" = "NYT: 0-5 days", "dnytpost6_3" = "NYT: 6-10 days", "dnytpost10_3" = "NYT: 11-20 days", "dnytpost1r_3" = "NYT Rec: 0-5 days", "dnytpost6r_3" = "NYT Rec: 6-10 days", "dnytpost10r_3" = "NYT Rec: 11-20 days", "dothpost_3" = "OTH: 1-10 days", "dothpost10_3" = "OTH: 11-20 days"))
RegTable
#data <- NULL
#reg1 <- NULL
#reg2 <- NULL
#reg3 <- NULL
#reg4 <- NULL
#reg5 <- NULL
dataTest <- data[c(4, 21, 67, 70)]
dataTest <- data[,c(4, 21, 67, 70)]
View(dataTest)
library(RTutor)
library(yaml)
library(xfun)
library(ggplot2)
#Set Working Directory
setwd("D:/Universitaet Ulm Unterlagen/Bachelorarbeit/The-Impact-Of-Reviews-And-Ratings-On-Bookmarket")
# Set problem set's name
ps.name = "The Impacts of reviews and Ratings on Book Market"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all required packages in the problem set
libs = c("ggplot2")
# Create Problem Set
create.ps(sol.file=sol.file, user.name = NULL, ps.name=ps.name,libs=libs,stop.when.finished=FALSE, addons="quiz")
#open problem set in web browser
show.ps(ps.name,launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
stop.without.error()
